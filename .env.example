# Gothic Forge environment
APP_ENV=development
FIBER_HOST=127.0.0.1
FIBER_PORT=8080
CSRF_SECRET=change-me
# DATABASE_URL can be set from Neon when deploying to Render (production):
#   postgresql://<user>:<pass>@<host>:5432/<db>?sslmode=require
# Local example:
DATABASE_URL=postgres://user:pass@localhost:5432/gforge?sslmode=disable

# Optional configuration
# Redis-backed sessions (fallbacks to cookie store if empty)
# Example: redis://localhost:6379/0 or redis://:password@localhost:6379/0
# Upstash example (TLS):
#   rediss://:<password>@<host>:<port>
REDIS_URL=
# Base URL for canonical links and og:url in LayoutSEO
BASE_URL=http://127.0.0.1:8080
# Set to "json" for structured logs, otherwise plain text
LOG_FORMAT=
# Comma-separated allowed origins for CORS in production (e.g. https://example.com,https://admin.example.com)
CORS_ORIGINS=

# SEO defaults used by templates.DefaultSEO and MergeWithDefaults
# Title and description used when a page doesn't specify them explicitly.
SITE_TITLE=Gothic Forge
SITE_DESCRIPTION=
# Comma-separated keywords, e.g. "go, web, starter"
SITE_KEYWORDS=

# Rate limiting (defaults: 120 requests per 60s)
# Set smaller values locally to test 429 responses more easily.
RATE_LIMIT_MAX=120
RATE_LIMIT_WINDOW_SECONDS=60

# Static assets caching
# In production, defaults to 86400s (1 day) if empty.
# In development, defaults to no-store unless set.
STATIC_CACHE_SECONDS=

# Export / Media optimization (used by `gforge export`)
# Enable lossy fallbacks (Go-based re-encode) when native tools are missing.
# Accepted values: 1 | true | yes (case-insensitive). Default: disabled.
GFORGE_MEDIA_LOSSY=
# JPEG quality (1-100) used only when GFORGE_MEDIA_LOSSY is enabled. Default: 85.
GFORGE_JPEG_QUALITY=85

# Deployment provider credentials (copy into your .env; avoid setting via shell)
# Render (SSR runtime)
# For CI, you can authenticate via API key; for local use run `render login`.
# Docs: https://render.com/docs/cli#non-interactive-mode
RENDER_API_KEY=
# If you want `gforge deploy` to trigger a deploy automatically, set your service ID:
# Find it in the Render Dashboard (Service â†’ Settings) or via `render services -o json`.
RENDER_SERVICE_ID=

# Cloudflare Pages (Static hosting)
# Project name used by `gforge deploy pages` (falls back to this if --pages-project is empty)
CLOUDFLARE_PAGES_PROJECT=
# Create a token and find your account ID:
#   Docs: https://developers.cloudflare.com/fundamentals/api/get-started/create-token/
#   Dashboard: https://dash.cloudflare.com/ (Profile -> API Tokens; Account Home -> Overview)
CLOUDFLARE_API_TOKEN=
CLOUDFLARE_ACCOUNT_ID=

# Neon (PostgreSQL) and Upstash (Redis) API keys for future automated provisioning
#   Neon: https://console.neon.tech/
#   Upstash: https://console.upstash.com/
NEON_API_KEY=
UPSTASH_API_KEY=
