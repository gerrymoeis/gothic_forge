name: Manual Deploy

on:
  workflow_dispatch:
    inputs:
      deploy_pages:
        description: Deploy to Cloudflare Pages
        type: boolean
        default: true
      deploy_railway:
        description: Deploy to Railway
        type: boolean
        default: false
      run_migrations:
        description: Run DB migrations (requires DATABASE_URL secret)
        type: boolean
        default: false

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
      CF_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
      CF_PROJECT_NAME: ${{ secrets.CF_PROJECT_NAME }}
      RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '>=1.22.0'
      - name: Download deps
        run: go mod download
      - name: Export static site (SSG)
        run: go run ./cmd/gforge export -o dist
        env:
          GFORGE_SKIP_TOOLS: ""
          LOG_FORMAT: off
      - name: Run DB migrations
        if: ${{ inputs.run_migrations && env.DATABASE_URL != '' }}
        run: go run ./cmd/gforge db --migrate
        env:
          DATABASE_URL: ${{ env.DATABASE_URL }}
      - name: Deploy to Cloudflare Pages
        if: ${{ inputs.deploy_pages && env.CF_API_TOKEN != '' && env.CF_ACCOUNT_ID != '' && env.CF_PROJECT_NAME != '' }}
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ env.CF_API_TOKEN }}
          accountId: ${{ env.CF_ACCOUNT_ID }}
          projectName: ${{ env.CF_PROJECT_NAME }}
          directory: dist
          gitHubToken: ${{ env.GITHUB_TOKEN }}
      - name: Install Railway CLI
        if: ${{ inputs.deploy_railway && env.RAILWAY_TOKEN != '' }}
        run: |
          ARCH=$(uname -m)
          if [ "$ARCH" = "x86_64" ] || [ "$ARCH" = "amd64" ]; then
            RARCH=amd64
          elif [ "$ARCH" = "aarch64" ] || [ "$ARCH" = "arm64" ]; then
            RARCH=arm64
          else
            echo "Unknown arch $ARCH; defaulting to amd64"
            RARCH=amd64
          fi
          echo "Installing Railway CLI for linux-$RARCH"
          sudo curl -fsSL -o /usr/local/bin/railway "https://github.com/railwayapp/cli/releases/latest/download/railway-linux-$RARCH"
          sudo chmod +x /usr/local/bin/railway
          railway --version
      - name: Railway deploy (up)
        if: ${{ inputs.deploy_railway && env.RAILWAY_TOKEN != '' }}
        run: railway up --detach
        env:
          RAILWAY_TOKEN: ${{ env.RAILWAY_TOKEN }}
